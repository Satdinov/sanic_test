"""empty message

Revision ID: 8d1c442f3444
Revises: 31c35dd2de78
Create Date: 2022-06-21 12:31:46.338833

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8d1c442f3444'
down_revision = '31c35dd2de78'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fiz_requisites_data',
    sa.Column('user_id', sa.Integer(), nullable=False, comment='User ID'),
    sa.Column('FIO', sa.String(), nullable=False),
    sa.Column('series_passport', sa.Integer(), nullable=True),
    sa.Column('number_passport', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('tel', sa.String(), nullable=False),
    sa.Column('delivery', sa.String(), nullable=True),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False, comment='ID'),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC create datetime'),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC update datetime'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fiz_requisites_data_user_id'), 'fiz_requisites_data', ['user_id'], unique=False)
    op.create_table('orders',
    sa.Column('user_id', sa.Integer(), nullable=False, comment='User ID'),
    sa.Column('name_order', sa.String(), nullable=True),
    sa.Column('status', postgresql.ENUM('Processing', 'Accepted', 'Confirmed', 'Operation', 'Sent', 'Completed', name='order_status'), server_default='Processing', nullable=False, comment='Order Status'),
    sa.Column('works', postgresql.ENUM('soldering', 'revision', name='works'), server_default='Soldering', nullable=False, comment="Ð¡ustomer's work"),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('file', sa.LargeBinary(), nullable=True),
    sa.Column('file_type', sa.String(), nullable=True),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False, comment='ID'),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC create datetime'),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC update datetime'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_status'), 'orders', ['status'], unique=False)
    op.create_index(op.f('ix_orders_user_id'), 'orders', ['user_id'], unique=False)
    op.create_index(op.f('ix_orders_works'), 'orders', ['works'], unique=False)
    op.create_table('questions',
    sa.Column('user_id', sa.Integer(), nullable=False, comment='User ID'),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False, comment='ID'),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC create datetime'),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC update datetime'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_user_id'), 'questions', ['user_id'], unique=False)
    op.create_table('ur_requisites_data',
    sa.Column('user_id', sa.Integer(), nullable=False, comment='User ID'),
    sa.Column('FIO', sa.String(), nullable=False),
    sa.Column('org_name', sa.String(), nullable=False),
    sa.Column('INN', sa.Integer(), nullable=False),
    sa.Column('KPP', sa.Integer(), nullable=False),
    sa.Column('OGRN', sa.Integer(), nullable=False),
    sa.Column('BIK', sa.Integer(), nullable=False),
    sa.Column('payment_number', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('tel', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('delivery', sa.String(), nullable=True),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False, comment='ID'),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC create datetime'),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC update datetime'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ur_requisites_data_user_id'), 'ur_requisites_data', ['user_id'], unique=False)
    op.drop_index('ix_image_data_user_id', table_name='image_data')
    op.drop_table('image_data')
    op.add_column('users', sa.Column('tel', sa.String(), nullable=False))
    op.add_column('users', sa.Column('subject', postgresql.ENUM('FizFace', 'UrFace', name='user_subject'), server_default='Fiz', nullable=True, comment='User subject'))
    op.add_column('users', sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC create datetime'))
    op.add_column('users', sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='UTC update datetime'))
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment='ID',
               existing_nullable=False)
    op.drop_index('ix_users_lang', table_name='users')
    op.create_index(op.f('ix_users_subject'), 'users', ['subject'], unique=False)
    op.drop_column('users', 'email')
    op.drop_column('users', 'lang')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('lang', postgresql.ENUM('EN', 'RU', name='user_langs'), server_default=sa.text("'EN'::user_langs"), autoincrement=False, nullable=False, comment='User lang'))
    op.add_column('users', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_users_subject'), table_name='users')
    op.create_index('ix_users_lang', 'users', ['lang'], unique=False)
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID',
               existing_nullable=False)
    op.drop_column('users', 'update_datetime')
    op.drop_column('users', 'create_datetime')
    op.drop_column('users', 'subject')
    op.drop_column('users', 'tel')
    op.create_table('image_data',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='User ID'),
    sa.Column('image', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('image_mime_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='image_data_user_id_fkey', ondelete='CASCADE')
    )
    op.create_index('ix_image_data_user_id', 'image_data', ['user_id'], unique=False)
    op.drop_index(op.f('ix_ur_requisites_data_user_id'), table_name='ur_requisites_data')
    op.drop_table('ur_requisites_data')
    op.drop_index(op.f('ix_questions_user_id'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_orders_works'), table_name='orders')
    op.drop_index(op.f('ix_orders_user_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_status'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_fiz_requisites_data_user_id'), table_name='fiz_requisites_data')
    op.drop_table('fiz_requisites_data')
    # ### end Alembic commands ###
